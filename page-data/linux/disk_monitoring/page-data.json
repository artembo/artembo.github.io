{
    "componentChunkName": "component---src-templates-docs-js",
    "path": "/linux/disk_monitoring/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Artembo' Cheat Sheet Collection","docsLocation":"https://github.com/artembo/artembo.github.io/tree/main/content"}},"mdx":{"fields":{"id":"e2248ffe-11f5-5caf-adec-0b68714f04c3","title":"Мониторинг нагрузки на жесткие диски в Linux","slug":"/linux/disk_monitoring/"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Мониторинг нагрузки на жесткие диски в Linux\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\u0415\\u0441\\u0442\\u044C \\u043D\\u0435\\u0441\\u043A\\u043E\\u043B\\u044C\\u043A\\u043E \\u0441\\u043F\\u043E\\u0441\\u043E\\u0431\\u043E\\u0432 \\u043F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044E \\u043E \\u0436\\u0435\\u0441\\u0442\\u043A\\u0438\\u0445 \\u0434\\u0438\\u0441\\u043A\\u0430\\u0445 \\u0432 Linux.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fdisk -l\"), \" \\u2014\\xA0\\u043F\\u043E\\u043A\\u0430\\u0437\\u044B\\u0432\\u0430\\u0435\\u0442 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044E \\u043E \\u0444\\u0438\\u0437\\u0438\\u0447\\u0435\\u0441\\u043A\\u0438\\u0445 \\u0434\\u0438\\u0441\\u043A\\u0430\\u0445 \\u0438 \\u0440\\u0430\\u0437\\u0434\\u0435\\u043B\\u0430\\u0445\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"Disk /dev/vda: 20 GiB, 21474836480 bytes, 41943040 sectors\\nUnits: sectors of 1 * 512 = 512 bytes\\nSector size (logical/physical): 512 bytes / 512 bytes\\nI/O size (minimum/optimal): 512 bytes / 512 bytes\\nDisklabel type: dos\\nDisk identifier: 0x3f334b8e\\n\\nDevice     Boot Start      End  Sectors Size Id Type\\n/dev/vda1  *     2048 41943006 41940959  20G 83 Linux\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"lshw -c disk\"), \" \\u2014\\xA0\\u0441 \\u043F\\u043E\\u043C\\u043E\\u0449\\u044C\\u044E lshw \\u043C\\u043E\\u0436\\u043D\\u043E \\u043F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043E \\u0432\\u0441\\u0435\\u0445 \\u0443\\u0441\\u0442\\u0440\\u043E\\u0439\\u0441\\u0442\\u0432\\u0430\\u0445,\\n\\u0432 \\u0443\\u0434\\u043E\\u0431\\u043D\\u043E\\u043C \\u0441\\u0442\\u0440\\u0443\\u043A\\u0442\\u0443\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u043D\\u043E\\u043C \\u0444\\u043E\\u0440\\u043C\\u0430\\u0442\\u0435. \\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043A\\u043B\\u0430\\u0441\\u0441\\u043E\\u0432 \\u0443\\u0441\\u0442\\u0440\\u043E\\u0439\\u0441\\u0442\\u0432 \\u0435\\u0441\\u0442\\u044C \\u0432\\n\\u0434\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u0430\\u0446\\u0438\\u0438 \\u043A \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ezix.org/project/wiki/HardwareLiSter#Deviceclasses\"\n  }, \"lshw\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"  *-virtio2\\n       description: Virtual I/O device\\n       physical id: 0\\n       bus info: virtio@2\\n       logical name: /dev/vda\\n       size: 20GiB (21GB)\\n       capabilities: partitioned partitioned:dos\\n       configuration: driver=virtio_blk logicalsectorsize=512 sectorsize=512 signature=3f334b8e\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"lsblk\"), \" \\u2014\\xA0\\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F \\u043E \\u0436\\u0435\\u0441\\u0442\\u043A\\u0438\\u0445 \\u0434\\u0438\\u0441\\u043A\\u0430\\u0445, \\u0440\\u0430\\u0437\\u0434\\u0435\\u043B\\u0430\\u0445 \\u0438 \\u0442\\u043E\\u0447\\u043A\\u0430\\u0445 \\u043C\\u043E\\u043D\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\\nvda    252:0    0   20G  0 disk\\n`-vda1 252:1    0   20G  0 part /\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"iostat\"), \" \\u0438\\u0437 \\u043F\\u0430\\u043A\\u0435\\u0442\\u0430 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sysstat\"), \"\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"iostat -d vda -x\"), \" \\u2014 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043F\\u043E \\u043D\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0435 \\u043D\\u0430 \\u0436\\u0435\\u0441\\u0442\\u043A\\u0438\\u0439 \\u0434\\u0438\\u0441\\u043A\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"Linux 4.18.0-305.7.1.el8_4.x86_64 (centos-basic-1-1-20gb.novalocal)   11/13/2021  _x86_64_  (1 CPU)\\n\\nDevice            r/s     w/s     rkB/s     wkB/s   rrqm/s   wrqm/s  %rrqm  %wrqm r_await w_await aqu-sz rareq-sz wareq-sz  svctm  %util\\nvda              0.01    0.26      0.15      3.86     0.00     0.24   1.07  47.82   18.75    4.66   0.00    19.71    15.01   2.84   0.08\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fio\"), \" \\u2014\\xA0Flexibli I/O tester\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fio --cmdhelp\"), \" \\u2014 \\u0432\\u044B\\u0432\\u043E\\u0434 \\u0441\\u043F\\u0438\\u0441\\u043A\\u0430 \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0445 \\u043F\\u0430\\u0440\\u0430\\u043C\\u0435\\u0442\\u0440\\u043E\\u0432. \\u0418\\u0445 \\u043C\\u043E\\u0436\\u043D\\u043E \\u0437\\u0430\\u0434\\u0430\\u0442\\u044C \\u0432\\n\\u043F\\u0430\\u0440\\u0430\\u043C\\u0435\\u0442\\u0440\\u0430\\u0445 \\u043F\\u0440\\u0438 \\u0437\\u0430\\u043F\\u0443\\u0441\\u043A\\u0435 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fio\"), \" \\u0438\\u043B\\u0438 \\u0432 job-\\u0444\\u0430\\u0439\\u043B\\u0435. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fio test.job\")), mdx(\"p\", null, \"\\u041F\\u0440\\u0438\\u043C\\u0435\\u0440 job\\u2013\\u0444\\u0430\\u0439\\u043B\\u0430:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"[global]\\nbs=4k\\niodepth=128\\nlatency_target=0.25\\nruntime=5\\nrw=randread\\nrandom_generator=lfsr\\ndirect=1\\nioengine=libaio\\n# 99.9% of IOs must be below the target\\nlatency_percentile=99.9\\n\\n[device]\\nfilename=/dev/vdb\\n\")), mdx(\"h2\", null, \"\\u041C\\u043E\\u043D\\u0438\\u0442\\u043E\\u0440\\u0438\\u043D\\u0433 \\u043D\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0438 I/O\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"iotop\"), \" \\u2014 \\\"top\\\" \\u0434\\u043B\\u044F \\u043F\\u0440\\u043E\\u0446\\u0435\\u0441\\u0441\\u043E\\u0432 \\u0441 \\u0434\\u0430\\u043D\\u043D\\u044B\\u043C\\u0438 \\u043F\\u043E \\u043E\\u043F\\u0435\\u0440\\u0430\\u0446\\u0438\\u044F\\u043C i/o.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"Total DISK READ :       0.00 B/s | Total DISK WRITE :    1603.26 M/s\\nActual DISK READ:       0.00 B/s | Actual DISK WRITE:    1603.26 M/s\\n  TID  PRIO  USER     DISK READ  DISK WRITE  SWAPIN     IO>    COMMAND\\n 3865 be/4 root        0.00 B/s 1603.26 M/s  0.00 % 80.56 % fio new-fio.job\\n    1 be/4 root        0.00 B/s    0.00 B/s  0.00 %  0.00 % init\\n    2 be/4 root        0.00 B/s    0.00 B/s  0.00 %  0.00 % [kthreadd]\\n    4 be/0 root        0.00 B/s    0.00 B/s  0.00 %  0.00 % [kworker/0:0H]\\n    ...\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#мониторинг-нагрузки-io","title":"Мониторинг нагрузки I/O"}]},"parent":{"relativePath":"linux/disk_monitoring.md"},"frontmatter":{"metaTitle":null,"metaDescription":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/","title":"Главная страница"}}},{"node":{"fields":{"slug":"/introduction/","title":"Introduction"}}},{"node":{"fields":{"slug":"/linux/","title":"Linux"}}},{"node":{"fields":{"slug":"/linux/cgroups/","title":"Cgroups"}}},{"node":{"fields":{"slug":"/linux/change_disk_size/","title":"Как увеличить размер диска на виртуальной машине Ubuntu"}}},{"node":{"fields":{"slug":"/linux/disk_monitoring/","title":"Мониторинг нагрузки на жесткие диски в Linux"}}},{"node":{"fields":{"slug":"/linux/oom_killer/","title":"OOM Killer в Linux"}}}]}},"pageContext":{"id":"e2248ffe-11f5-5caf-adec-0b68714f04c3"}},
    "staticQueryHashes": ["2619113677","3706406642","417421954"]}